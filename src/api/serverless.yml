service: bike-service-api

provider:
  name: aws
  runtime: nodejs12.x
  environment:
    BIKES_TABLE_NAME: bikes
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.BIKES_TABLE_NAME}"

functions:
  list:
    handler: functions/bikes/list
    events:
      - http:
          path: bikes/list
          method: get
          cors: true
  create:
    handler: functions/bikes/create
    events:
      - http:
          path: bikes/create
          method: post
          cors: true
  get:
    handler: functions/bikes/get
    events:
      - http:
          path: bikes/{id}
          method: get
          cors: true
  update:
    handler: functions/bikes/update
    events:
      - http:
          path: bikes/update
          method: patch
          cors: true
  delete:
    handler: functions/bikes/delete
    events:
      - http:
          path: bikes/delete
          method: delete
          cors: true

resources:
  Resources:
    UsersDynamoDbTable:
      Type: AWS::DynamoDB::Table
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1   # determine actual values?
          WriteCapacityUnits: 1  # same
        TableName: ${self:provider.environment.BIKES_TABLE_NAME}
